"use strict";(self.webpackChunksqb_docs=self.webpackChunksqb_docs||[]).push([[6441],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),i=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=i(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=i(n),y=a,f=u["".concat(l,".").concat(y)]||u[y]||m[y]||o;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=y;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:a,s[1]=c;for(var i=2;i<o;i++)s[i]=n[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},6278:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>f,frontMatter:()=>c,metadata:()=>i,toc:()=>u});n(7294);var r=n(3905);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const c={title:"MetaData Class",sidebar_position:5,slug:"/connectionwrapper/metadataclass",description:"MetaData Class",keywords:["connection","metadata"]},l=void 0,i={unversionedId:"ConnectionWrapper/MetaDataClass",id:"ConnectionWrapper/MetaDataClass",title:"MetaData Class",description:"MetaData Class",source:"@site/docs/ConnectionWrapper/MetaDataClass.mdx",sourceDirName:"ConnectionWrapper",slug:"/connectionwrapper/metadataclass",permalink:"/docs/connectionwrapper/metadataclass",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"MetaData Class",sidebar_position:5,slug:"/connectionwrapper/metadataclass",description:"MetaData Class",keywords:["connection","metadata"]},sidebar:"tutorialSidebar",previous:{title:"Rowset Class",permalink:"/docs/connectionwrapper/rowsetclass"},next:{title:"Executing Queries",permalink:"/docs/connectionwrapper/executingqueries"}},p={},u=[{value:"Methods",id:"methods",level:2},{value:"MetaData.prototype.select()",id:"metadataprototypeselect",level:3},{value:"MetaData.prototype.getSchemas()",id:"metadataprototypegetschemas",level:3}],m={toc:u},y="wrapper";function f(e){var{components:t}=e,n=s(e,["components"]);return(0,r.kt)(y,o(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){a(e,t,n[t])}))}return e}({},m,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"MetaData is a special class that helps working with database meta data."),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"metadataprototypeselect"},"MetaData.prototype.select()"),(0,r.kt)("p",null,'Starts a function chain that helps creating a "select query" for querying meta-data.'),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"metaData.select([...column])")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"column")," : String representation of column name")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// Query schemas\npool.metaData.select().from('schemas').execute().then(result => {\n  // ...\n});\n\n// Query tables\npool.metaData.select().from('tables')\n  .where(['schema_name', 'my_schema'])\n  .execute(function(err, result) {\n    // ...\n  });\n\n// Query columns\npool.metaData.select().from('columns')\n  .where(['schema_name', 'my_schema'], ['table_name', 'like', 'TBL_%'])\n  .execute().then(result => {\n    // ...\n  });\n\n// Query primary keys\npool.metaData.select().from('primary_keys')\n  .where(['schema_name', 'my_schema'], ['table_name', 'TBL_1'])\n  .execute().then(result => {\n    // ...\n  });\n\n// Query foreign keys\npool.metaData.select().from('foreign_keys')\n  .where(['schema_name', 'my_schema'], ['table_name', 'TBL_1'])\n  .execute().then(result => {\n    // ...\n  });\n")),(0,r.kt)("h3",{id:"metadataprototypegetschemas"},"MetaData.prototype.getSchemas()"),(0,r.kt)("p",null,"Queryies and returns SchemaMeta objects which helps working with database schema."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"metaData.getSchemas([schemaLike])")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"schemaLike")," : Allows filtering for schema names.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// Query schemas\nlet schemas = await pool.metaData.getSchemas('MY%');\nlet tables = awit schemas[0].getTables();\n")))}f.isMDXComponent=!0}}]);