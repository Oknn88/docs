"use strict";(self.webpackChunksqb_docs=self.webpackChunksqb_docs||[]).push([[941],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),i=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=i(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=i(r),d=o,m=p["".concat(l,".").concat(d)]||p[d]||y[d]||a;return r?n.createElement(m,s(s({ref:t},c),{},{components:r})):n.createElement(m,s({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=d;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u[p]="string"==typeof e?e:o,s[1]=u;for(var i=2;i<a;i++)s[i]=r[i];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7433:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>u,metadata:()=>i,toc:()=>p});r(7294);var n=r(3905);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}const u={title:"InsertQuery Class",sidebar_position:2,slug:"/sqlquerybuilder/queryobjects/insertqueryclass",description:"InsertQuery Class",keywords:["methods","insert","query"]},l=void 0,i={unversionedId:"SqlQueryBuilder/QueryObjects/InsertQueryClass",id:"SqlQueryBuilder/QueryObjects/InsertQueryClass",title:"InsertQuery Class",description:"InsertQuery Class",source:"@site/docs/SqlQueryBuilder/QueryObjects/InsertQueryClass.mdx",sourceDirName:"SqlQueryBuilder/QueryObjects",slug:"/sqlquerybuilder/queryobjects/insertqueryclass",permalink:"/docs/docs/sqlquerybuilder/queryobjects/insertqueryclass",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"InsertQuery Class",sidebar_position:2,slug:"/sqlquerybuilder/queryobjects/insertqueryclass",description:"InsertQuery Class",keywords:["methods","insert","query"]},sidebar:"tutorialSidebar",previous:{title:"DeleteQuery Class",permalink:"/docs/docs/sqlquerybuilder/queryobjects/deletequeryclass"},next:{title:"SelectQuery Class",permalink:"/docs/docs/sqlquerybuilder/queryobjects/selectqueryclass"}},c={},p=[{value:"Construction",id:"construction",level:2},{value:"Methods",id:"methods",level:2},{value:"ReturningQuery.prototype.returning()",id:"returningqueryprototypereturning",level:3},{value:"Query.prototype.execute()",id:"queryprototypeexecute",level:3},{value:"Query.prototype.values()",id:"queryprototypevalues",level:3}],y={toc:p},d="wrapper";function m(e){var{components:t}=e,r=s(e,["components"]);return(0,n.kt)(d,a(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){o(e,t,r[t])}))}return e}({},y,r),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"construction"},"Construction"),(0,n.kt)("p",null,"SQB namespace, ",(0,n.kt)("a",{parentName:"p",href:"/docs/docs/connectionwrapper/poolclass"},"Pool")," and ",(0,n.kt)("a",{parentName:"p",href:"/docs/docs/connectionwrapper/connectionclass"},"Connection")," have ",(0,n.kt)("inlineCode",{parentName:"p"},"insert()")," function that creates SelectQuery instance."),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"A Query instance that created by ",(0,n.kt)("a",{parentName:"p",href:"/docs/docs/connectionwrapper/poolclass"},"Pool")," and ",(0,n.kt)("a",{parentName:"p",href:"/docs/docs/connectionwrapper/connectionclass"},"Connection")," can be executed directly.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"query = (sqb|pool|connection).insert(tableName, values)\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"tableName"),"  (String|Raw) : String representation of table name or Raw sql object."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"values")," : Array of values with column order")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"query = sqb.insert('customer', {id: 1, name: 'John'});\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"Generated SQL for Postgres:\ninsert into customer (id, name) values (1, 'John')\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"returningqueryprototypereturning"},"ReturningQuery.prototype.returning()"),(0,n.kt)("p",null,'Defines "returning" part of delete ',(0,n.kt)("inlineCode",{parentName:"p"},"query"),"."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},".returning(obj)")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"obj")," (Object): An object instance that defines returning parameters ."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Returns"),": UpdateQuery itself.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"var query = sqb.insert('customer', {name:'John'})\n    .returning({\n      id: 'number',\n      name: 'string'\n    });\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"Generated SQL for Oracle:\ninsert into customer (name) value ('John')\nreturning id into :returning$id, name into :returning$name\n")),(0,n.kt)("h3",{id:"queryprototypeexecute"},"Query.prototype.execute()"),(0,n.kt)("p",null,"Executes query and returns Promise. Please check ",(0,n.kt)("a",{parentName:"p",href:"/docs/docs/connectionwrapper/executingqueries"},"executing queries")," section for details."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"pool.insert('customer', {id: 1, name: 'John'})\n    .execute({\n       autoCommit: true\n     }).then(result => {\n       console.log('Record inserted');\n     });\n")),(0,n.kt)("h3",{id:"queryprototypevalues"},"Query.prototype.values()"),(0,n.kt)("p",null,"Sets execution values for query. Please check ",(0,n.kt)("a",{parentName:"p",href:"/docs/docs/connectionwrapper/executingqueries"},"executing queries")," section for details."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"const query = pool.insert('customer', {id: /ID/, name: /Name/});\n....\nquery.values({ID: request.values.ID, Name: request.values.Name)\n    .execute({\n       autoCommit: true\n     }).then(result => {\n       console.log('Records inserted');\n     });\n")))}m.isMDXComponent=!0}}]);