"use strict";(self.webpackChunksqb_docs=self.webpackChunksqb_docs||[]).push([[254],{3905:(e,r,n)=>{n.d(r,{Zo:()=>u,kt:()=>y});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=t.createContext({}),s=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},u=function(e){var r=s(e.components);return t.createElement(l.Provider,{value:r},e.children)},d="mdxType",b={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(n),p=o,y=d["".concat(l,".").concat(p)]||d[p]||b[p]||i;return n?t.createElement(y,a(a({ref:r},u),{},{components:n})):t.createElement(y,a({ref:r},u))}));function y(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=p;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c[d]="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2281:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>u,contentTitle:()=>l,default:()=>y,frontMatter:()=>c,metadata:()=>s,toc:()=>d});n(7294);var t=n(3905);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){return r=null!=r?r:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):function(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))})),e}function a(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const c={title:"Introduction",sidebar_position:1,slug:"/sqlquerybuilder/introduction",description:"Introduction",keywords:["query","builder","code","javascript","sqb"]},l=void 0,s={unversionedId:"SqlQueryBuilder/Introduction",id:"SqlQueryBuilder/Introduction",title:"Introduction",description:"Introduction",source:"@site/docs/SqlQueryBuilder/Introduction.mdx",sourceDirName:"SqlQueryBuilder",slug:"/sqlquerybuilder/introduction",permalink:"/docs/docs/sqlquerybuilder/introduction",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Introduction",sidebar_position:1,slug:"/sqlquerybuilder/introduction",description:"Introduction",keywords:["query","builder","code","javascript","sqb"]},sidebar:"tutorialSidebar",previous:{title:"About",permalink:"/docs/docs/owerview/about"},next:{title:"Serializing",permalink:"/docs/docs/sqlquerybuilder/serializing"}},u={},d=[],b={toc:d},p="wrapper";function y(e){var{components:r}=e,n=a(e,["components"]);return(0,t.kt)(p,i(function(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{},t=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(t=t.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),t.forEach((function(r){o(e,r,n[r])}))}return e}({},b,n),{components:r,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"The starting point of the SQB library is building sql queries for any dialect with a single codebase in JavaScript. SQB coding style is very similar to sql language."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"\nconst sqb = require('sqb');\nsqb.use(require('sqb-serializer-oracle'));\n/* Shortcuts for more clear coding */\nconst innerJoin = sqb.innerJoin;\nconst select = sqb.select;\nconst raw = sqb.raw;\n/* Initialize serializer */\nconst serializer = sqb.serializer({\n      dialect: 'oracle',  // Use Oracle serializer\n      prettyPrint: true\n    });\n\nconst query =\n        select(\n            'b.ID as book_id', 'b.name book_name', 'c.name category_name',\n            select(raw('count(*)')).from('articles a')\n                .where(['a.book_id', '=', raw(\"b.id\")]).alias('article_count')\n        ).from('BOOKS b')\n            .join(\n                innerJoin('category c')\n                    .on(['c.id', '=', raw('b.category_id')], ['c.kind', 'science'])\n            )\n            .where(\n                ['b.id', '>=', 1],\n                ['b.id', '<', 100],\n                ['b.name', 'like', /name/],\n                [\n                    ['release_date', 'between', /release_date/], 'or',\n                    ['release_date', 'between', [new Date(2015, 0, 1, 0, 0, 0, 0), new Date(2016, 0, 1, 0, 0, 0, 0)]],\n                ],\n                ['c.name', ['novel', 'horror', 'child']],\n                [select('name').from('author').where(['id', raw('b.author_id')]), '=', 'Jessica Parker']\n            )\n            .orderBy(\"c.name\", \"b.release_date desc\");\n\nlet result = serializer.build(query,{\n    name: 'WIHTE DOG',\n    release_date: [new Date(2000, 0, 1, 0, 0, 0, 0), new Date(2001, 0, 1, 0, 0, 0, 0)]\n    });\nconsole.log(result.sql);\nconsole.log(result.params);\n\n")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-sql"},"\nselect b.ID book_id, b.name book_name, c.name category_name,\n    (select count(*) from articles a where a.book_id = b.id) article_count\nfrom BOOKS b\n  inner join category c on c.id = b.category_id and c.kind = 'science'\nwhere b.id >= 1 and b.id < 100 and b.name like ? and (release_date between ? and ?\n        or release_date between to_date('2015-01-01', 'yyyy-mm-dd') and to_date('2016-01-01', 'yyyy-mm-dd'))\n    and c.name in ('novel','horror','child')\n    and (select name from author where id = b.author_id) = 'Jessica Parker'\norder by c.name, b.release_date desc\n\n")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"[ 'WIHTE DOG', 2000-01-01T00:00:00.000Z, 2001-01-01T00:00:00.000Z ]\n")))}y.isMDXComponent=!0}}]);